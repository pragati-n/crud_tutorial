laravel notes:

Routing ================
 1. 
 route::get("/",welcomecontroller@index)	
 
 In welcomecontroller.php
 public function index()
 {
	return "hello worlld";
	Or 
	return view("welcome") // file name
	return view("folder_path/welcome") // file name
	OR
	return view("folder_path.welcome") // file name
 }


- To create a controller via command
	php artisan 
	php artisan make:controller [CONTROLLER_NAME]
	
	php artisan make:controller PostController --resource --model=Post make controller for REST and model
	
to check all command related to make controller
	php artisan help make:controller

2. Passing data to views================
	$name ="abc";
   return view("welcome")->with('name',$name);
   
   OR
   
   FOR MORE DATA
   
   return view("welcome")->with([
									"first"=>$first_name,
									"last"=>$last_name,
							]);
							
	return view("welcome", $data_arr);
	
	return view("welcome",compact('first','last')) // compact function finds the first and last varibale names and pass it
   
   and in view 
   use {{ $VARIABLE_NAME }}
   
   
3. php artisan migrate:rollback
   php artisan migrate
   php artisan make:migration [FILE_NAME_UNDER_DB_FOLDER] --create="[NAME_OF_TABLE]"
if you want to add new column to existing table
   php artisan make:migration [FILE_NAME _SPECIFIC TO NEW COLUMN] --table="[NAME_OF_TABLE]"
   
To drop a column in rollback function 
	composer require doctrine/dbal --> require this tool
	php artisan migrate:rollback
	
	
======Eloquent ======
* Eloquent models are always plural to the table names if not specify table name min model as => protected $table ="[TABLE_NAME]"

*TO make model 
	php artisan make:model [MODEL_NAME_YOU _WANT TO PROVIDE]
	
TINKER
- php artisan tinker
 tinker helps to interact using cmd with application
 
 create a obj of model where you want to play around with db
 ex:
 $list = new App\models\TodoList
 $list->item="item1"
 $list->done_flag=1
 $list->published_at=Carbon\Carbon::now()
 $list or $list->toArray() to check the array 
 $list->save() // to save the records to db 
 
 to fetch data you can do 
 $list_data = App\models\TodoList::all()
 
 To find data with id
 $list_data = new App\models\TodoList::find(1)
 
 to do fetch where
 $list_data = new App\models\TodoList::where['item','item2']->get()
 
 to do all at once
 $list_data = App\models\TodoList::create(["item"=>"item3","done_flag"=>1,"published_at"=>Carbon\Carbon::now()]);
   Add above fields to fillable property in respective model to allow updating values.
   
   
   To update values in db of id 2
   
  $list_data = App\models\TodoList::find(2)
  $list_data->update(["item" => "updated_item"]);
  
 ====Third party package for html ====
composer require illumminate/html 


=====Guarded property ===
1. protected $guarded = [];
this array stores the fields names which are not allowed in bulk update or create
2. it is opposite of fillable property.


=====Route model binding ===
Route:: get('blogs/{post}',function(Post $post){
	return view('post',['post'=>$post])
});

when you mention function(Post $post){ the variable as underlying model name laravel understands that it has to fetch a post given the post variable in the url. It tries to matrch the given post variable to the posts present in db.
note that the get param post(keyword ) should be same as argument name in the function.



https://websolutionstuff.com/post/laravel-8-crud-operation-example#google_vignette
https://github.com/websolutionstuff/Laravel-8-CRUD-Operation